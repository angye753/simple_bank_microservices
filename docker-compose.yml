services:
  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    networks:
      - springnet
  db:
    image: postgres:17
    container_name: postgres
    env_file:
      - .env
    ports:
      - "5433:5432"
    volumes:
      - local_pgdata:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - springnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d rabobank"]
      interval: 10s
      timeout: 5s
      retries: 5
  bank-service-auth:
    build: ./simple-bank-auth
    container_name: bank_service_auth
    env_file:
      - .env
    depends_on:
      - db
    tty: true
    ports:
      - "8083:8083"
    networks:
      - springnet
  bank-service-read:
    build: ./simple-bank-service-read
    container_name: bank_service_read
    env_file:
      - .env
    depends_on:
      - kafka
      - db
    tty: true
    ports:
      - "8082:8082"
    networks:
      - springnet
  bank-service:
    build: ./simple-bank-service
    container_name: bank_service
    env_file:
      - .env
    depends_on:
      - kafka
      - db
    tty: true
    ports:
      - "8081:8081"
    networks:
      - springnet
  nginx:
    build: ./nginx
    container_name: api-gateway
    ports:
      - "81:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - nginx_ssl:/etc/nginx/ssl
    depends_on:
      - bank-service
      - bank-service-read
    networks:
      - springnet

volumes:
  local_pgdata:
  nginx_ssl:

networks:
  springnet:
